//------------------------------------------------------------------------------
// Source code generated by wxDesigner from file: GpuProgramParameterEditor.wdr
// Do not modify this file, all changes will be lost!
//------------------------------------------------------------------------------

#if defined(__GNUG__) && !defined(NO_GCC_PRAGMA)
    #pragma implementation "GpuProgramParameterEditor_wdr.h"
#endif

// For compilers that support precompilation
#include "wx/wxprec.h"

#ifdef __BORLANDC__
    #pragma hdrstop
#endif

// Include private header
#include "GpuProgramParameterEditor_wdr.h"

#include <wx/intl.h>

// Euro sign hack of the year
#if wxUSE_UNICODE
    #define __WDR_EURO__ wxT("\u20ac")
#else
    #if defined(__WXMAC__)
        #define __WDR_EURO__ wxT("\xdb")
    #elif defined(__WXMSW__)
        #define __WDR_EURO__ wxT("\x80")
    #else
        #define __WDR_EURO__ wxT("\xa4")
    #endif
#endif

#include <wx/propgrid/propgrid.h>
#include <wx/propgrid/manager.h>

// Implement window functions

wxSizer *GpuProgramParameterEditor( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxFlexGridSizer *item0 = new wxFlexGridSizer( 1, 0, 0 );

	item0->AddGrowableCol(0);

	item0->AddGrowableRow(1);

    wxFlexGridSizer *item1 = new wxFlexGridSizer( 1, 0, 0 );

	item1->AddGrowableCol(0);

	item1->AddGrowableRow(0);


    wxTreeCtrl *item2 = new wxTreeCtrl( parent, ID_TREECTRL_MATERIAL, wxDefaultPosition, wxSize(250,400), wxTR_MULTIPLE|wxTR_HAS_BUTTONS|wxTR_LINES_AT_ROOT|wxSUNKEN_BORDER );
    item1->Add( item2, 0, wxALIGN_CENTER|wxALL|wxGROW, 5 );

    wxBoxSizer *item3 = new wxBoxSizer( wxHORIZONTAL );

    wxButton *item4 = new wxButton( parent, ID_BUTTON_SAVE, /*_("Save Material")*/_("保存材质"), wxDefaultPosition, wxDefaultSize, 0 );
    item3->Add( item4, 0, wxALIGN_CENTER|wxALL|wxGROW, 5 );

    wxButton *item5 = new wxButton( parent, ID_BUTTON_APPLY_OTHER_MATERIAL, /*_("Apply to other materials")*/_("应用其他材质"), wxDefaultPosition, wxDefaultSize, 0 );
    item3->Add( item5, 0, wxALIGN_CENTER|wxALL|wxGROW, 0 );

    item1->Add( item3, 0, wxALIGN_CENTER|wxALL|wxGROW, 5 );

    item0->Add( item1, 0, wxALIGN_CENTER|wxALL|wxGROW, 5 );

    wxPropertyGridManager *item6 = new wxPropertyGridManager(parent, ID_PARAMETER_EDITOR,
            wxDefaultPosition, // position 
            wxSize(300, 700), // size
            wxCLIP_CHILDREN | wxCLIP_SIBLINGS |
			wxPG_BOLD_MODIFIED | // Modified values are drawn in bold font
			wxPG_SPLITTER_AUTO_CENTER | // Automatically center splitter until user manually adjusts it
			wxPG_TOOLTIPS | // Display tooltips for cell text that cannot be shown completely
			wxPG_TOOLBAR | // Include toolbar
			wxFULL_REPAINT_ON_RESIZE |
			wxPGMAN_DEFAULT_STYLE); // Plus default style
    item6->SetExtraStyle(wxPG_EX_CLASSIC_SPACING);
    wxASSERT( item6 );
    item0->Add( item6, 0, wxALIGN_CENTER|wxALL|wxGROW, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

// Implement menubar functions

// Implement toolbar functions

// Implement bitmap functions


// End of generated file
