# Makefile.in generated automatically by automake 1.5 from Makefile.am.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = .

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = @build_alias@
build_triplet = @build@
host_alias = @host_alias@
host_triplet = @host@
target_alias = @target_alias@
target_triplet = @target@
AMTAR = @AMTAR@
AS = @AS@
AWK = @AWK@
CC = @CC@
CONFIG_FILES = @CONFIG_FILES@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
EXEEXT = @EXEEXT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LARGEFILE_CFLAGS = @LARGEFILE_CFLAGS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTREL = @LTREL@
LTVER = @LTVER@
MAINT = @MAINT@
MAJOR = @MAJOR@
MICRO = @MICRO@
MINOR = @MINOR@
MKZIP = @MKZIP@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PATCH = @PATCH@
PERL = @PERL@
PHP = @PHP@
PKG_CONFIG = @PKG_CONFIG@
RANLIB = @RANLIB@
RESOLVES = @RESOLVES@
SDL = @SDL@
SED = @SED@
STRIP = @STRIP@
VERSION = @VERSION@
XMLTO = @XMLTO@
ZIPTESTS = @ZIPTESTS@
ZLIB_INCL = @ZLIB_INCL@
ZLIB_LDIR = @ZLIB_LDIR@
ZLIB_VERSION = @ZLIB_VERSION@
ZZIPLIB_LDFLAGS = @ZZIPLIB_LDFLAGS@
am__include = @am__include@
am__quote = @am__quote@
docdir = @docdir@
install_sh = @install_sh@
THREAD_SAFE = @THREAD_SAFE@

AUTOMAKE_OPTIONS = 1.4 foreign
AUTOTOOL_VERSION = autoconf-2.52 automake-1.5 libtool-1.4.2

bin_PROGRAMS = zzcat zzdir zzxorcat zzxordir zzxorcopy
noinst_PROGRAMS = zziptest zzobfuscated zzipwrap
bin_SCRIPTS = zzip-config
lib_LTLIBRARIES = libzzip.la libzzipwrap.la
include_HEADERS = $(libzzip_la_headers) $(libzzipwrap_la_headers)
noinst_HEADERS = __debug.h __hints.h __mmap.h __dirent.h
readme_FILES = README TODO COPYING.ZZIP COPYING.LIB COPYING.ZLIB 
#
VERSION_INFO = @VERSION_INFO@
RELEASE_INFO = @RELEASE_INFO@

#
libzzip_la_SOURCES = \
	zzip-zip.c \
	zzip-file.c \
	zzip-dir.c \
	zzip-stat.c \
	zzip-info.c \
	zzip-err.c \
	zzip-io.c

libzzip_la_headers = \
	zzip-stdint.h \
	zzip-file.h \
	zzip-io.h \
	zzip.h \
	zziplib.h \
	zzipformat.h \
	zzip-conf.h \
	zzip-config.h \
	zzip-msvc.h

libzzip_la_LDFLAGS = @ZZIPLIB_LDFLAGS@ $(RELEASE_INFO) $(VERSION_INFO) \
                    $(THREAD_SAFE)

libzzip_la_LIBADD = -lz @RESOLVES@

libzzipwrap_la_SOURCES = \
	zzipwrap-mem.c

libzzipwrap_la_headers = \
	zzipwrap.h


libzzipwrap_la_LDFLAGS = @ZZIPLIB_LDFLAGS@ $(RELEASE_INFO) $(VERSION_INFO) \
		        $(THREAD_SAFE)

libzzipwrap_la_LIBADD = libzzip.la @RESOLVES@ -lz

SDL_rwops_FILES = SDL_rwops_zzip.h SDL_rwops_zzip.c SDL_rwops_zzcat.c \
	     README.SDL


MSVC6_DIST = README.MSVC6 zziplib.dsw zziplib.dsp zziplib_DLL.dsp \
           zzcat.dsp zzdir.dsp zziptest.dsp zzipwrap.dsp zzobfuscated.dsp

WCC10_DIST = zziplib.wpj
WCC10_CLEAN = *.obj *.lk1 *.mk1 *.mk *.sym *.tgt

EXTRA_DIST = test.zip test1.zip $(readme_FILES) \
        $(PACKAGE).spec $(SDL_rwops_FILES) $(MSVC6_DIST) $(WCC10_DIST) \
	zzip-msvc.sed config.h.in zzip-config.in 

CONFIG_CLEAN_FILES = zzip-config.h 
CLEANFILES = $(WCC10_CLEAN)

zziptest_LDFLAGS = @ZZIPLIB_LDFLAGS@
zziptest_LDADD = libzzip.la @RESOLVES@ -lz
zzcat_LDFLAGS = @ZZIPLIB_LDFLAGS@
zzcat_LDADD = libzzip.la @RESOLVES@ -lz
zzdir_LDFLAGS = @ZZIPLIB_LDFLAGS@
zzdir_LDADD = libzzip.la @RESOLVES@ -lz
zzxorcat_LDFLAGS = @ZZIPLIB_LDFLAGS@
zzxorcat_LDADD = libzzip.la @RESOLVES@ -lz
zzxordir_LDFLAGS = @ZZIPLIB_LDFLAGS@
zzxordir_LDADD = libzzip.la @RESOLVES@ -lz
zzobfuscated_LDFLAGS = @ZZIPLIB_LDFLAGS@
zzobfuscated_LDADD = libzzip.la @RESOLVES@ -lz
zzipwrap_LDFLAGS = @ZZIPLIB_LDFLAGS@
zzipwrap_LDADD = libzzipwrap.la @RESOLVES@ libzzip.la -lz

# -------------------------------------------------------------------
NULL = /dev/null


# -------------------------------------------------------------------
stdtests = @ZIPTESTS@ check-test0 check-test1 check-zzdir check-zzcat
xortests = @ZIPTESTS@ check-zzxor check-zzxordir check-zzxorcat

# -------------------------------------------------------------------
ECHON = echo -n
BRUTE = 0    # default is less than a thousand tests
subdir = zziplib
mkinstalldirs = $(SHELL) $(top_srcdir)/uses/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
LTLIBRARIES = $(lib_LTLIBRARIES)

libzzip_la_DEPENDENCIES =
am_libzzip_la_OBJECTS = zzip-zip.lo zzip-file.lo zzip-dir.lo \
	zzip-stat.lo zzip-info.lo zzip-err.lo zzip-io.lo
libzzip_la_OBJECTS = $(am_libzzip_la_OBJECTS)
libzzipwrap_la_DEPENDENCIES = libzzip.la
am_libzzipwrap_la_OBJECTS = zzipwrap-mem.lo
libzzipwrap_la_OBJECTS = $(am_libzzipwrap_la_OBJECTS)
bin_PROGRAMS = zzcat$(EXEEXT) zzdir$(EXEEXT) zzxorcat$(EXEEXT) \
	zzxordir$(EXEEXT) zzxorcopy$(EXEEXT)
noinst_PROGRAMS = zziptest$(EXEEXT) zzobfuscated$(EXEEXT) \
	zzipwrap$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)

zzcat_SOURCES = zzcat.c
zzcat_OBJECTS = zzcat.$(OBJEXT)
zzcat_DEPENDENCIES = libzzip.la
zzdir_SOURCES = zzdir.c
zzdir_OBJECTS = zzdir.$(OBJEXT)
zzdir_DEPENDENCIES = libzzip.la
zziptest_SOURCES = zziptest.c
zziptest_OBJECTS = zziptest.$(OBJEXT)
zziptest_DEPENDENCIES = libzzip.la
zzipwrap_SOURCES = zzipwrap.c
zzipwrap_OBJECTS = zzipwrap.$(OBJEXT)
zzipwrap_DEPENDENCIES = libzzipwrap.la libzzip.la
zzobfuscated_SOURCES = zzobfuscated.c
zzobfuscated_OBJECTS = zzobfuscated.$(OBJEXT)
zzobfuscated_DEPENDENCIES = libzzip.la
zzxorcat_SOURCES = zzxorcat.c
zzxorcat_OBJECTS = zzxorcat.$(OBJEXT)
zzxorcat_DEPENDENCIES = libzzip.la
zzxorcopy_SOURCES = zzxorcopy.c
zzxorcopy_OBJECTS = zzxorcopy.$(OBJEXT)
zzxorcopy_LDADD = $(LDADD)
zzxorcopy_DEPENDENCIES =
zzxorcopy_LDFLAGS =
zzxordir_SOURCES = zzxordir.c
zzxordir_OBJECTS = zzxordir.$(OBJEXT)
zzxordir_DEPENDENCIES = libzzip.la
SCRIPTS = $(bin_SCRIPTS)


DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/uses/depcomp
@AMDEP_TRUE@DEP_FILES = $(DEPDIR)/zzcat.Po $(DEPDIR)/zzdir.Po \
@AMDEP_TRUE@	$(DEPDIR)/zzip-dir.Plo $(DEPDIR)/zzip-err.Plo \
@AMDEP_TRUE@	$(DEPDIR)/zzip-file.Plo $(DEPDIR)/zzip-info.Plo \
@AMDEP_TRUE@	$(DEPDIR)/zzip-io.Plo $(DEPDIR)/zzip-stat.Plo \
@AMDEP_TRUE@	$(DEPDIR)/zzip-zip.Plo $(DEPDIR)/zziptest.Po \
@AMDEP_TRUE@	$(DEPDIR)/zzipwrap-mem.Plo $(DEPDIR)/zzipwrap.Po \
@AMDEP_TRUE@	$(DEPDIR)/zzobfuscated.Po $(DEPDIR)/zzxorcat.Po \
@AMDEP_TRUE@	$(DEPDIR)/zzxorcopy.Po $(DEPDIR)/zzxordir.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = @CFLAGS@
DIST_SOURCES = $(libzzip_la_SOURCES) $(libzzipwrap_la_SOURCES) zzcat.c \
	zzdir.c zziptest.c zzipwrap.c zzobfuscated.c zzxorcat.c \
	zzxorcopy.c zzxordir.c
HEADERS = $(include_HEADERS) $(noinst_HEADERS)

DIST_COMMON = README $(include_HEADERS) $(noinst_HEADERS) COPYING.LIB \
	ChangeLog Makefile.am Makefile.in TODO acinclude.m4 \
	config.guess config.sub configure configure.ac depcomp \
	install-sh ltmain.sh missing mkinstalldirs
SOURCES = $(libzzip_la_SOURCES) $(libzzipwrap_la_SOURCES) zzcat.c zzdir.c zziptest.c zzipwrap.c zzobfuscated.c zzxorcat.c zzxorcopy.c zzxordir.c

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  zziplib/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && \
	  CONFIG_HEADERS= CONFIG_LINKS= \
	  CONFIG_FILES=$(subdir)/$@ $(SHELL) ./config.status
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(LIBTOOL) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$p"; \
	    $(LIBTOOL) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p"; \
	  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
libzzip.la: $(libzzip_la_OBJECTS) $(libzzip_la_DEPENDENCIES) 
	$(LINK) -rpath $(libdir) $(libzzip_la_LDFLAGS) $(libzzip_la_OBJECTS) $(libzzip_la_LIBADD) $(LIBS)
libzzipwrap.la: $(libzzipwrap_la_OBJECTS) $(libzzipwrap_la_DEPENDENCIES) 
	$(LINK) -rpath $(libdir) $(libzzipwrap_la_LDFLAGS) $(libzzipwrap_la_OBJECTS) $(libzzipwrap_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo $$p1|sed '$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
zzcat$(EXEEXT): $(zzcat_OBJECTS) $(zzcat_DEPENDENCIES) 
	@rm -f zzcat$(EXEEXT)
	$(LINK) $(zzcat_LDFLAGS) $(zzcat_OBJECTS) $(zzcat_LDADD) $(LIBS)
zzdir$(EXEEXT): $(zzdir_OBJECTS) $(zzdir_DEPENDENCIES) 
	@rm -f zzdir$(EXEEXT)
	$(LINK) $(zzdir_LDFLAGS) $(zzdir_OBJECTS) $(zzdir_LDADD) $(LIBS)
zziptest$(EXEEXT): $(zziptest_OBJECTS) $(zziptest_DEPENDENCIES) 
	@rm -f zziptest$(EXEEXT)
	$(LINK) $(zziptest_LDFLAGS) $(zziptest_OBJECTS) $(zziptest_LDADD) $(LIBS)
zzipwrap$(EXEEXT): $(zzipwrap_OBJECTS) $(zzipwrap_DEPENDENCIES) 
	@rm -f zzipwrap$(EXEEXT)
	$(LINK) $(zzipwrap_LDFLAGS) $(zzipwrap_OBJECTS) $(zzipwrap_LDADD) $(LIBS)
zzobfuscated$(EXEEXT): $(zzobfuscated_OBJECTS) $(zzobfuscated_DEPENDENCIES) 
	@rm -f zzobfuscated$(EXEEXT)
	$(LINK) $(zzobfuscated_LDFLAGS) $(zzobfuscated_OBJECTS) $(zzobfuscated_LDADD) $(LIBS)
zzxorcat$(EXEEXT): $(zzxorcat_OBJECTS) $(zzxorcat_DEPENDENCIES) 
	@rm -f zzxorcat$(EXEEXT)
	$(LINK) $(zzxorcat_LDFLAGS) $(zzxorcat_OBJECTS) $(zzxorcat_LDADD) $(LIBS)
zzxorcopy$(EXEEXT): $(zzxorcopy_OBJECTS) $(zzxorcopy_DEPENDENCIES) 
	@rm -f zzxorcopy$(EXEEXT)
	$(LINK) $(zzxorcopy_LDFLAGS) $(zzxorcopy_OBJECTS) $(zzxorcopy_LDADD) $(LIBS)
zzxordir$(EXEEXT): $(zzxordir_OBJECTS) $(zzxordir_DEPENDENCIES) 
	@rm -f zzxordir$(EXEEXT)
	$(LINK) $(zzxordir_LDFLAGS) $(zzxordir_OBJECTS) $(zzxordir_LDADD) $(LIBS)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  f="`echo $$p|sed '$(transform)'`"; \
	  if test -f $$p; then \
	    echo " $(INSTALL_SCRIPT) $$p $(DESTDIR)$(bindir)/$$f"; \
	    $(INSTALL_SCRIPT) $$p $(DESTDIR)$(bindir)/$$f; \
	  elif test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_SCRIPT) $(srcdir)/$$p $(DESTDIR)$(bindir)/$$f"; \
	    $(INSTALL_SCRIPT) $(srcdir)/$$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  f="`echo $$p|sed '$(transform)'`"; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/zzcat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/zzdir.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/zzip-dir.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/zzip-err.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/zzip-file.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/zzip-info.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/zzip-io.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/zzip-stat.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/zzip-zip.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/zziptest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/zzipwrap-mem.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/zzipwrap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/zzobfuscated.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/zzxorcat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/zzxorcopy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/zzxordir.Po@am__quote@

distclean-depend:
	-rm -rf $(DEPDIR)

.c.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `test -f $< || echo '$(srcdir)/'`$<

.c.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `cygpath -w $<`

.c.lo:
@AMDEP_TRUE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LTCOMPILE) -c -o $@ `test -f $< || echo '$(srcdir)/'`$<
CCDEPMODE = @CCDEPMODE@
uninstall-info-am:
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(includedir)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(INSTALL_HEADER) $$d$$p $(DESTDIR)$(includedir)/$$f"; \
	  $(INSTALL_HEADER) $$d$$p $(DESTDIR)$(includedir)/$$f; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(includedir)/$$f"; \
	  rm -f $(DESTDIR)$(includedir)/$$f; \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || etags $(ETAGS_ARGS) $$tags  $$unique $(LISP)

GTAGS:
	here=`CDPATH=: && cd $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH

DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  if test -f $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    $(mkinstalldirs) "$(distdir)/$$dir"; \
	  fi; \
	  if test -d $$d/$$file; then \
	    cp -pR $$d/$$file $(distdir) \
	    || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(SCRIPTS) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES


installdirs:
	$(mkinstalldirs) $(DESTDIR)$(libdir) $(DESTDIR)$(bindir) $(DESTDIR)$(bindir) $(DESTDIR)$(includedir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES) stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-exec-am: install-binPROGRAMS install-binSCRIPTS \
	install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-includeHEADERS uninstall-info-am \
	uninstall-libLTLIBRARIES

.PHONY: GTAGS all all-am check check-am check-local clean \
	clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-noinstPROGRAMS distclean distclean-compile \
	distclean-depend distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-binPROGRAMS install-binSCRIPTS install-data \
	install-data-am install-exec install-exec-am \
	install-includeHEADERS install-info install-info-am \
	install-libLTLIBRARIES install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-includeHEADERS uninstall-info-am \
	uninstall-libLTLIBRARIES


SDL_rwops_zzip.$(OBJEXT) : SDL_rwops_zzip.c
	$(COMPILE) $< -c -o $@ `sdl-config --cflags` `zzip-config --cflags`  
SDL_rwops_zzcat.$(OBJEXT) : SDL_rwops_zzcat.c
	$(COMPILE) $< -c -o $@ `sdl-config --cflags` `zzip-config --cflags`  
testsdl: SDL_rwops_zzip.$(OBJEXT) SDL_rwops_zzcat.$(OBJEXT) 
	$(LINK) SDL_rwops_zzip.$(OBJEXT) SDL_rwops_zzcat.$(OBJEXT) \
		`sdl-config --libs` `zzip-config --libs` -o zzcatsdl$(EXEEXT)
	zzcatsdl$(EXEEXT) test/README

testzip testzips : test.zip test1.zip test2.zip test3.zip 

test.zip : @MAINTAINER_MODE_TRUE@ README
	$(MKZIP) test.zip README
test1.zip :
	@ echo $(MKZIP) $@ ... \
	; mkdir test.tmp \
	; for i in 1 2 3 4 5 6 8 9 \
	; do echo "file-$i" >test.tmp/file.$$i ; done \
	; echo " a plain text file here" >test.tmp/README \
	; (cd test.tmp && $(MKZIP) ../$@ file.* >$(NULL)) \
	; rm -rf test.tmp

test2.zip : # will not be shipped in source tarball
	@ echo $(MKZIP) $@ ... \
	; mkdir test.tmp \
	; for i in 1 2 3 4 5 6 8 9 ; do for j in 1 2 3 4 5 6 7 8 9 \
	; do echo "file-$i" >test.tmp/file.$$j$$i ; done done \
	; (cd test.tmp && $(MKZIP) ../$@ file.* >$(NULL)) \
	; rm -rf test.tmp

test3.zip : # will not be shipped in source tarball
	@ echo $(MKZIP) $@ ... \
	; mkdir test.tmp ; for h in 1 2 3 4 5 6 7 8 9 ; do : \
	; for i in 1 2 3 4 5 6 8 9 ; do for j in 1 2 3 4 5 6 7 8 9 \
	; do echo "file-$i" >test.tmp/file.$$h$$j$$i ; done done done \
	; (cd test.tmp && $(MKZIP) ../$@ file.* >$(NULL)) \
	; rm -rf test.tmp

test.dat : test.zip
	./zzxorcopy$(EXEEXT) $? $@
test1.dat : test1.zip
	./zzxorcopy$(EXEEXT) $? $@
test2.dat : test2.zip
	./zzxorcopy$(EXEEXT) $? $@
test3.dat : test3.zip
	./zzxorcopy$(EXEEXT) $? $@

check-local: check-readme $(stdtests) $(xortests)

check-readme : zzcat$(EXEEXT) @MAINTAINER_MODE_TRUE@ test.zip
	@ echo checking ./zzcat$(EXEXT) test/README 
	@ ./zzcat$(EXEXT) test/README >test.out
	@ if diff test.out README >$(NULL) \
	; then rm test.out ; echo check OK ; true \
	; else rm test.out ; echo check FAIL ; false ; fi

check-zzxor : zzxorcat$(EXEEXT) test.dat
	@ echo checking ./zzxorcat$(EXEXT) test.dat/README 
	@ ./zzxorcat$(EXEXT) test.dat/README >test.out
	@ if diff test.out README >$(NULL) \
	; then rm test.out ; echo check OK ; true \
	; else rm test.out ; echo check FAIL ; false ; fi

test: test0 test1 test2 test3
test0: zziptest$(EXEEXT)
	./zziptest$(EXEEXT) test.zip
test1: zziptest$(EXEEXT)
	./zziptest$(EXEEXT) test1.zip
test2: zzcat$(EXEEXT)
	./zzcat$(EXEEXT) test/README
test3: zzdir$(EXTEXT)
	./zzdir test1.zip

check-test0 : zziptest$(EXEEXT)
	@ echo ___ $@ ___
	./zziptest$(EXEEXT) test.zip >test.out
	rm test.out
check-test1 : zziptest$(EXEEXT)
	@ echo ___ $@ ___ "(about ten seconds)"
	./zziptest$(EXEEXT) test1.zip >test.out
	rm test.out

check-zzdir : test1.zip test2.zip test3.zip zzdir$(EXEEXT) 
	@ echo ___ $@ ___
	   ./zzdir$(EXEEXT) test1 > test.out
	@ X="zzdir$(EXEEXT) test1 "\
	; if grep file.1 test.out >$(NULL) ; then : \
	; if grep file.9 test.out >$(NULL) ; then : \
	; echo ..$$X.. OK ; true ; else echo ..$$X.. FAIL ; false ; fi fi
	   ./zzdir$(EXEEXT) test2 > test.out
	@ X="zzdir$(EXEEXT) test2 "\
	; if grep file.11 test.out >$(NULL) ; then : \
	; if grep file.99 test.out >$(NULL) ; then : \
	; echo ..$$X.. OK ; true ; else echo ..$$X.. FAIL ; false ; fi fi
	   ./zzdir$(EXEEXT) test3 > test.out
	@ X="zzdir$(EXEEXT) test3 "\
	; if grep file.111 test.out >$(NULL) ; then : \
	; if grep file.999 test.out >$(NULL) ; then : \
	; echo ..$$X.. OK ; true ; else echo ..$$X.. FAIL ; false ; fi fi
	@ X="zzdir$(EXEEXT) test000" ; echo ./$$X "(negative test)" \
	; if ./zzdir$(EXEEXT) test000 >test.out ; then : \
	; echo ..$$X.. FAIL ; false ; else echo ..$$X.. OK ; true ; fi 
	rm test.out

check-zzcat : test1.zip test2.zip test3.zip zzcat$(EXEEXT)
	@ echo ___ $@ ___
	   ./zzcat$(EXEEXT) test1/file.1 test1/file.9 > test.out
	@ X="zzcat$(EXEEXT) test1/file.1 test1/file.9 "\
	; if grep file-1 test.out >$(NULL) ; then : \
	; if grep file-9 test.out >$(NULL) ; then : \
	; echo ..$$X.. OK ; true ; else echo ..$$X.. FAIL ; false ; fi fi
	   ./zzcat$(EXEEXT) test2/file.11 test2/file.99 > test.out
	@ X="zzcat$(EXEEXT) test2/file.10 test2/file.99 "\
	; if grep file-10 test.out >$(NULL) ; then : \
	; if grep file-99 test.out >$(NULL) ; then : \
	; echo ..$$X.. OK ; true ; else echo ..$$X.. FAIL ; false ; fi fi
	   ./zzcat$(EXEEXT) test3/file.111 test3/file.999 > test.out
	@ X="zzcat$(EXEEXT) test3/file.111 test3/file.999 "\
	; if grep file-100 test.out >$(NULL) ; then : \
	; if grep file-999 test.out >$(NULL) ; then : \
	; echo ..$$X.. OK ; true ; else echo ..$$X.. FAIL ; false ; fi fi
	@ X="zzcat$(EXEEXT) test1/file.999" ; echo ./$$X "(negative test)" \
	; if ./zzdir$(EXEEXT) test1/file.999 >test.out ; then : \
	; echo ..$$X.. FAIL ; false ; else echo ..$$X.. OK ; true ; fi 
	rm test.out

check-zzxordir : test1.dat test2.dat zzxordir$(EXEEXT) 
	@ echo ___ $@ ___
	   ./zzxordir$(EXEEXT) test1 > test.out
	@ X="zzxordir$(EXEEXT) test1 "\
	; if grep file.1 test.out >$(NULL) ; then : \
	; if grep file.9 test.out >$(NULL) ; then : \
	; echo ..$$X.. OK ; true ; else echo ..$$X.. FAIL ; false ; fi fi
	   ./zzxordir$(EXEEXT) test2.dat > test.out
	@ X="zzxordir$(EXEEXT) test2.dat "\
	; if grep file.11 test.out >$(NULL) ; then : \
	; if grep file.99 test.out >$(NULL) ; then : \
	; echo ..$$X.. OK ; true ; else echo ..$$X.. FAIL ; false ; fi fi
	rm test.out

check-zzxorcat : test1.dat test2.dat zzxorcat$(EXEEXT)
	@ echo ___ $@ ___
	   ./zzxorcat$(EXEEXT) test1/file.1 test1/file.9 > test.out
	@ X="zzxorcat$(EXEEXT) test1/file.1 test1/file.9 "\
	; if grep file-1 test.out >$(NULL) ; then : \
	; if grep file-9 test.out >$(NULL) ; then : \
	; echo ..$$X.. OK ; true ; else echo ..$$X.. FAIL ; false ; fi fi
	   ./zzxorcat$(EXEEXT) test2.dat/file.11 test2/file.99 > test.out
	@ X="zzxorcat$(EXEEXT) test2.dat/file.10 test2/file.99 "\
	; if grep file-10 test.out >$(NULL) ; then : \
	; if grep file-99 test.out >$(NULL) ; then : \
	; echo ..$$X.. OK ; true ; else echo ..$$X.. FAIL ; false ; fi fi
	rm test.out
brute :      # which is still a brute force selftest
	@ echo $(MKZIP) $@: \
	; for u in 1 2 3 4 5 6 8 9 ; do for v in 1 2 3 4 5 6 7 8 9 ; do : \
	; for w in 1 2 3 4 5 6 8 9 ; do for x in $(BRUTE) ; do : \
	; $(ECHON) $$u$$v$$w$$x: \
	; rm -rf test.tmp ; mkdir test.tmp \
	; for i in 1 2 3 4 5 6 8 9 ; do for j in 1 2 3 4 5 6 7 8 9 ; do : \
	; for m in 1 2 3 4 5 6 8 9 ; do for n in $(BRUTE) ; do : \
	; echo "file-$$i$$j$$m$$n" >test.tmp/file$$i$$j$$m$$n.txt \
	;        test "$$i$$j$$m$$n" = "$$u$$v$$w$$x" && break \
	; done ; test "$$i$$j$$m$$n" = "$$u$$v$$w$$x" && break \
	; done ; test "$$i$$j$$m$$n" = "$$u$$v$$w$$x" && break \
	; done ; test "$$i$$j$$m$$n" = "$$u$$v$$w$$x" && break \
	; done ; test -f test.tmp/file$$i$$j$$m$$n.txt || exit 2 \
	; (cd test.tmp && $(MKZIP) ../test$$u$$v$$w$$x.zip file*.* >$(NULL)) \
	; rm -rf test.tmp \
	; for i in 1 2 3 4 5 6 8 9 ; do for j in 1 2 3 4 5 6 7 8 9 ; do : \
	; for m in 1 2 3 4 5 6 8 9 ; do for n in $(BRUTE) ; do : \
	; ./zzcat$(EXEEXT) test$$u$$v$$w$$x/file$$i$$j$$m$$n.txt >test.out \
	; if grep file-$$i$$j$$m$$n test.out >$(NULL) ; then rm test.out \
	; else echo ERROR file-$$i$$j$$m$$n diff in test$$u$$v$$w$$x \
	; exit 1 ; fi \
	; ./zzdir$(EXEEXT) test$$u$$v$$w$$x >test.out \
	; if grep file$$i$$j$$m$$n.txt test.out >$(NULL) ; then rm test.out \
	; else echo ERROR file$$i$$j$$m$$n.txt not in test$$u$$v$$w$$x \
	; exit 1 ; fi \
	;        test "$$i$$j$$m$$n" = "$$u$$v$$w$$x" && break \
	; done ; test "$$i$$j$$m$$n" = "$$u$$v$$w$$x" && break \
	; done ; test "$$i$$j$$m$$n" = "$$u$$v$$w$$x" && break \
	; done ; test "$$i$$j$$m$$n" = "$$u$$v$$w$$x" && break \
	; done ; rm test$$u$$v$$w$$x.zip \
	; done ; done ; done ; done ; true

# -------------------------------------------------------------------
auto:
	aclocal && autoconf && autoheader && automake

boottrap:
	rm -rf .deps .libs
	rm -f config.guess config.sub stamp-h.in
	rm -f install-sh ltconfig ltmain.sh depcomp mkinstalldirs
	rm -f config.h config.h.in config.log config.cache configure
	rm -f aclocal.m4 Makefile Makefile.in
	aclocal 
	autoconf 
	autoheader 
	automake -a -c 

rpm: dist $(PACKAGE).spec
	rpm -ta $(PACKAGE)-$(VERSION).tar.gz

# ---- ADDITION after change to zzip/* style --- NEEDED for `make dist`
zzip-config.h : ../zzip/_config.h
	- ln -s $< $@
zzip-msvc.h : ../zzip/_msvc.h
	- ln -s $< $@
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
